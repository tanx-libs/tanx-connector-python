name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
  release:
    types: [published]


jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest

  build-and-publish:
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release'}}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Build package
      run: |
        python -m pip install --upgrade build
        python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{secrets.PYPI_API_KEY}}
      run: |
        python -m pip install --upgrade twine
        python3 -m twine upload dist/*
